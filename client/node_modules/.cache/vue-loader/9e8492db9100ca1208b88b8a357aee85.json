{"remainingRequest":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drx/Documents/GitHub/WebDev_G8/client/src/components/UpdateProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/src/components/UpdateProfile.vue","mtime":1621868556549},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHVzZXJEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy91c2VyRGF0YVNlcnZpY2UiCiAgCiAgZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBmaXJzdG5hbWU6ICIiLAogICAgICAgIGxhc3RuYW1lOiAiIiwKICAgICAgICB1c2VybmFtZTogIiIsCiAgICAgICAgcGFzc3dvcmQ6IiIsCiAgICAgICAgdXNlcmlkOiIiCiAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCl7CiAgICAgIHRoaXMudXNlclByb2ZpdCgpOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgLy8gc2F2ZSB1c2UgcHJvZmlsZSBpbiBjb29raWVzCiAgICAgIC8vIGJlZm9yZSBzYXZlLCB1c2UgYmFzZTY0IHRvIGtlZXAgY29udGVudCBzZWN1cmUKICAgICAgdXNlclByb2ZpdCgpewogICAgICAgIGxldCBiYXNlNjQgPSByZXF1aXJlKCJqcy1iYXNlNjQiKS5CYXNlNjQKICAgICAgICB0aGlzLmZpcnN0bmFtZSA9IHRoaXMuJGNvb2tpZXMuZ2V0KCdmaXJzdG5hbWUnKTsKICAgICAgICB0aGlzLmxhc3RuYW1lID0gdGhpcy4kY29va2llcy5nZXQoJ2xhc3RuYW1lJyk7CiAgICAgICAgdGhpcy51c2VybmFtZSA9IHRoaXMuJGNvb2tpZXMuZ2V0KCd1c2VybmFtZScpOwogICAgICAgIHRoaXMudXNlcmlkID0gdGhpcy4kY29va2llcy5nZXQoJ3VzZXJpZCcpOwogICAgICAgICB0aGlzLmZpcnN0bmFtZSA9IGJhc2U2NC5kZWNvZGUodGhpcy5maXJzdG5hbWUpCiAgICAgICAgdGhpcy5sYXN0bmFtZSA9IGJhc2U2NC5kZWNvZGUodGhpcy5sYXN0bmFtZSkKICAgICAgICB0aGlzLnVzZXJuYW1lID0gYmFzZTY0LmRlY29kZSh0aGlzLnVzZXJuYW1lKQogICAgICAgIHRoaXMudXNlcmlkID0gYmFzZTY0LmRlY29kZSh0aGlzLnVzZXJpZCkKICAgICAgICB0aGlzLnByb2ZpbGVQYWdlID0gdHJ1ZTsKICAgICAgfSwKCiAgICAgIHVwZGF0ZUluZm8oKXsKICAgICAgCiAgICAgICAgdGhpcy4kcHJvbXB0KAogICAgICAgICAgJ1BsZWFzZSBlbnRlciB5b3VyIHBhc3Nvd3JkIGZpcnN0OicsIAogICAgICAgICAgJ1Bhc3N3b3JkJywKICAgICAgICAgIHsKICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ2NvbmZpcm0nLAogICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICdjYW5jZWwnLAogICAgICAgICAgICAgIGlucHV0RXJyb3JNZXNzYWdlOiAnSW5QdXQgY291bGQgbm90IGJlIGVtcHR5JywKICAgICAgICAgICAgICBpbnB1dFR5cGU6ICdwYXNzd29yZCcsCiAgICAgICAgICAgICAgaW5wdXRWYWxpZGF0b3I6ICh2YWx1ZSkgPT4geyAgICAgICAKICAgICAgICAgICAgICAgICAgaWYoIXZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0lucHV0IGNvdWxkIG5vdCBiZSBlbXB0eSc7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9KS50aGVuKGFzeW5jKHt2YWx1ZX0pID0+IHsKICAgICAgICAgICAgICAgbGV0IGJhc2U2NCA9IHJlcXVpcmUoImpzLWJhc2U2NCIpLkJhc2U2NAogICAgICAgICAgICAgICAgdGhpcy5wYXNzd29yZCA9IHZhbHVlOwogICAgICAgICAgICAgICAgdGhpcy5wYXNzd29yZCA9IHRoaXMuJG1kNSh0aGlzLnBhc3N3b3JkKQogICAgICAgICAgICAgICAgdGhpcy51c2VyaWQgPSB0aGlzLiRjb29raWVzLmdldCgidXNlcmlkIikKICAgICAgICAgICAgICAgIHRoaXMudXNlcmlkID0gYmFzZTY0LmRlY29kZSh0aGlzLnVzZXJpZCkKICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBhd2FpdCB1c2VyRGF0YVNlcnZpY2UuTG9naW5WZXJpZnkodGhpcy51c2VyaWQsIHRoaXMucGFzc3dvcmQpCiAgICAgICAgICAgICAgICBsZXQgcmVzID0gcmVzdWx0LmRhdGEKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmKHJlcy5zdGF0dXMgPT0gMCl7CiAgICAgICAgICAgICAgICAgIHZhciAgdXBkYXRlZFJlc3VsdCA9IGF3YWl0IHVzZXJEYXRhU2VydmljZS5nZXRVcGRhdGVkUHJvZml0KHRoaXMuZmlyc3RuYW1lLCB0aGlzLmxhc3RuYW1lLCB0aGlzLnVzZXJuYW1lLHRoaXMudXNlcmlkKQogICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIGxldCByZXNwb25zZSA9IHVwZGF0ZWRSZXN1bHQuZGF0YS5yZXN1bHQ7CiAgICAgICAgICAgICAgICAgIHRoaXMuZmlyc3RuYW1lID0gYmFzZTY0LmVuY29kZSh0aGlzLmZpcnN0bmFtZSkKICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0bmFtZSA9IGJhc2U2NC5lbmNvZGUodGhpcy5sYXN0bmFtZSkKICAgICAgICAgICAgICAgICAgdGhpcy51c2VybmFtZSA9IGJhc2U2NC5lbmNvZGUodGhpcy51c2VybmFtZSkKICAgICAgICAgICAgICAgICAgdGhpcy51c2VyaWQgPSBiYXNlNjQuZW5jb2RlKHRoaXMudXNlcmlkKQogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgdGhpcy4kY29va2llcy5zZXQoImZpcnN0bmFtZSIsIHRoaXMuZmlyc3RuYW1lLCAiMzBtaW4iKTsKICAgICAgICAgICAgICAgICAgdGhpcy4kY29va2llcy5zZXQoImxhc3RuYW1lIix0aGlzLmxhc3RuYW1lLCIzMG1pbiIpOwogICAgICAgICAgICAgICAgICB0aGlzLiRjb29raWVzLnNldCgidXNlcm5hbWUiLHRoaXMudXNlcm5hbWUsIjMwbWluIik7CiAgICAgICAgICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJzdGF0ZSIsIHRydWUsIjMwbWluIik7CiAgICAgICAgICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJ1c2VyaWQiLCB0aGlzLnVzZXJpZCwgIjMwbWluIik7CiAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLmxpc3Qubk1vZGlmaWVkID09MSApewogICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgic3VjY2Vzc2Z1bGx5IHVwZGF0ZWQgIikKICAgICAgICAgICAgICAgICAgdGhpcy5maXJzdG5hbWUgPSBiYXNlNjQuZGVjb2RlKHRoaXMuZmlyc3RuYW1lKQogICAgICAgICAgICAgICAgICB0aGlzLmxhc3RuYW1lID0gYmFzZTY0LmRlY29kZSh0aGlzLmxhc3RuYW1lKQogICAgICAgICAgICAgICAgICB0aGlzLnVzZXJuYW1lID0gYmFzZTY0LmRlY29kZSh0aGlzLnVzZXJuYW1lKQogICAgICAgICAgICAgICAgICB0aGlzLnVzZXJpZCA9IGJhc2U2NC5kZWNvZGUodGhpcy51c2VyaWQpCiAgICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICB0aGlzLmZpcnN0bmFtZSA9IGJhc2U2NC5kZWNvZGUodGhpcy5maXJzdG5hbWUpCiAgICAgICAgICAgICAgICAgIHRoaXMubGFzdG5hbWUgPSBiYXNlNjQuZGVjb2RlKHRoaXMubGFzdG5hbWUpCiAgICAgICAgICAgICAgICAgIHRoaXMudXNlcm5hbWUgPSBiYXNlNjQuZGVjb2RlKHRoaXMudXNlcm5hbWUpCiAgICAgICAgICAgICAgICAgIHRoaXMudXNlcmlkID0gYmFzZTY0LmRlY29kZSh0aGlzLnVzZXJpZCkKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAgIGFsZXJ0KCJwYXNzd29yZCBpbmNvcnJlY3QsIHBsZWFzZSB0cnkgYWdhaW4iKQogICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSAKICAgICAgICB9Cn0K"},{"version":3,"sources":["UpdateProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdateProfile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>User profit</h1>\n\n    firstname:\n    <input type = \"text\" v-model=\"firstname\"><br>\n    <br>\n\n    lastname:\n    <input type = \"text\" v-model=\"lastname\"><br>\n    <br>\n\n    Email: \n    <input type = \"text\" v-model=\"username\"><br>\n  \n    <button type=\"button\" @click=\"updateInfo\">Update</button>\n        \n\n  </div>\n</template>\n\n<script>\n  import userDataService from \"../services/userDataService\"\n  \n  export default {\n    data() {\n      return {\n        firstname: \"\",\n        lastname: \"\",\n        username: \"\",\n        password:\"\",\n        userid:\"\"\n      }\n    },\n    mounted(){\n      this.userProfit();\n    },\n    methods: {\n      // save use profile in cookies\n      // before save, use base64 to keep content secure\n      userProfit(){\n        let base64 = require(\"js-base64\").Base64\n        this.firstname = this.$cookies.get('firstname');\n        this.lastname = this.$cookies.get('lastname');\n        this.username = this.$cookies.get('username');\n        this.userid = this.$cookies.get('userid');\n         this.firstname = base64.decode(this.firstname)\n        this.lastname = base64.decode(this.lastname)\n        this.username = base64.decode(this.username)\n        this.userid = base64.decode(this.userid)\n        this.profilePage = true;\n      },\n\n      updateInfo(){\n      \n        this.$prompt(\n          'Please enter your passowrd first:', \n          'Password',\n          {\n              confirmButtonText: 'confirm',\n              cancelButtonText: 'cancel',\n              inputErrorMessage: 'InPut could not be empty',\n              inputType: 'password',\n              inputValidator: (value) => {       \n                  if(!value) {\n                      return 'Input could not be empty';\n                  }\n                  \n              },\n              }).then(async({value}) => {\n               let base64 = require(\"js-base64\").Base64\n                this.password = value;\n                this.password = this.$md5(this.password)\n                this.userid = this.$cookies.get(\"userid\")\n                this.userid = base64.decode(this.userid)\n                var result = await userDataService.LoginVerify(this.userid, this.password)\n                let res = result.data\n                console.log(res);\n                      \n                if(res.status == 0){\n                  var  updatedResult = await userDataService.getUpdatedProfit(this.firstname, this.lastname, this.username,this.userid)\n                   \n                  let response = updatedResult.data.result;\n                  this.firstname = base64.encode(this.firstname)\n                  this.lastname = base64.encode(this.lastname)\n                  this.username = base64.encode(this.username)\n                  this.userid = base64.encode(this.userid)\n                  \n                  this.$cookies.set(\"firstname\", this.firstname, \"30min\");\n                  this.$cookies.set(\"lastname\",this.lastname,\"30min\");\n                  this.$cookies.set(\"username\",this.username,\"30min\");\n                  this.$cookies.set(\"state\", true,\"30min\");\n                  this.$cookies.set(\"userid\", this.userid, \"30min\");\n                  if(response.list.nModified ==1 ){\n                        alert(\"successfully updated \")\n                  this.firstname = base64.decode(this.firstname)\n                  this.lastname = base64.decode(this.lastname)\n                  this.username = base64.decode(this.username)\n                  this.userid = base64.decode(this.userid)\n                  }else{\n                  this.firstname = base64.decode(this.firstname)\n                  this.lastname = base64.decode(this.lastname)\n                  this.username = base64.decode(this.username)\n                  this.userid = base64.decode(this.userid)\n                  }\n                }else{\n                  alert(\"password incorrect, please try again\")\n                  return;\n                }\n              })\n            } \n        }\n}\n</script>\n\n"]}]}