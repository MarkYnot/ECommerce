{"remainingRequest":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drx/Documents/GitHub/WebDev_G8/client/src/components/UpdateProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/src/components/UpdateProfile.vue","mtime":1621434595485},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHVzZXJEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy91c2VyRGF0YVNlcnZpY2UiCiAgCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIGZpcnN0bmFtZTogIiIsCiAgICAgICAgICAgICAgICBsYXN0bmFtZTogIiIsCiAgICAgICAgICAgICAgICB1c2VybmFtZTogIiIsCiAgICAgICAgICAgICAgICBwYXNzd29yZDoiIiwKICAgICAgICAgICAgICAgIHVzZXJpZDoiIgoKICAgIH0KICB9LAogIG1vdW50ZWQoKXsKICAgICB0aGlzLnVzZXJQcm9maXQoKTsKCiAgfSwKICAgIG1ldGhvZHM6IHsKICAgIHVzZXJQcm9maXQoKXsKICAgICAgdGhpcy5maXJzdG5hbWUgPSB0aGlzLiRjb29raWVzLmdldCgnZmlyc3RuYW1lJyk7CiAgICAgIHRoaXMubGFzdG5hbWUgPSB0aGlzLiRjb29raWVzLmdldCgnbGFzdG5hbWUnKTsKICAgICAgdGhpcy51c2VybmFtZSA9IHRoaXMuJGNvb2tpZXMuZ2V0KCd1c2VybmFtZScpOwogICAgICB0aGlzLnVzZXJpZCA9IHRoaXMuJGNvb2tpZXMuZ2V0KCd1c2VyaWQnKTsKICAgICAgdGhpcy5wcm9maWxlUGFnZSA9IHRydWU7CiAgICB9LAoKICAgICB1cGRhdGVJbmZvKCl7CiAgICAgIAogICAgICB0aGlzLiRwcm9tcHQoCiAgICAgICAgICAgICAgICAnUGxlYXNlIGVudGVyIHlvdXIgcGFzc293cmQgZmlyc3Q6JywgCiAgICAgICAgICAgICAgICAnUGFzc3dvcmQnLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnY29uZmlybScsCiAgICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ2NhbmNlbCcsCiAgICAgICAgICAgICAgICAgICAgaW5wdXRFcnJvck1lc3NhZ2U6ICdJblB1dCBjb3VsZCBub3QgYmUgZW1wdHknLAogICAgICAgICAgICAgICAgICAgIGlucHV0VmFsaWRhdG9yOiAodmFsdWUpID0+IHsgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCF2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdJbnB1dCBjb3VsZCBub3QgYmUgZW1wdHknOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSkudGhlbihhc3luYyh7dmFsdWV9KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhc3N3b3JkID0gdmFsdWU7CiAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhc3N3b3JkID0gdGhpcy4kbWQ1KHRoaXMucGFzc3dvcmQpCiAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gYXdhaXQgdXNlckRhdGFTZXJ2aWNlLmdldExvZ2luRGV0YWlsKHRoaXMudXNlcm5hbWUsIHRoaXMucGFzc3dvcmQpCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXMgPSByZXN1bHQuZGF0YQogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgaWYocmVzLmNoZWNrZWQpewogICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgIHVwZGF0ZWRSZXN1bHQgPSBhd2FpdCB1c2VyRGF0YVNlcnZpY2UuZ2V0VXBkYXRlZFByb2ZpdCh0aGlzLmZpcnN0bmFtZSwgdGhpcy5sYXN0bmFtZSwgdGhpcy51c2VybmFtZSx0aGlzLnVzZXJpZCkKICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2UgPSB1cGRhdGVkUmVzdWx0LmRhdGEucmVzdWx0OwogICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJmaXJzdG5hbWUiLCB0aGlzLmZpcnN0bmFtZSwgIjMwbWluIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kY29va2llcy5zZXQoImxhc3RuYW1lIix0aGlzLmxhc3RuYW1lLCIzMG1pbiIpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJ1c2VybmFtZSIsdGhpcy51c2VybmFtZSwiMzBtaW4iKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRjb29raWVzLnNldCgic3RhdGUiLCB0cnVlLCIzMG1pbiIpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJ1c2VyaWQiLCB0aGlzLnVzZXJpZCwgIjMwbWluIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UubGlzdC5uTW9kaWZpZWQgPT0xKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgic3VjY2Vzc2Z1bGx5IHVwZGF0ZWQgIikKICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgicGFzc3dvcmQgaW5jb3JyZWN0LCBwbGVhc2UgdHJ5IGFnYWluIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICB9KQoKICAgICAgICAgICAgICAgICAgfQogICAKICB9Cgp9Cg=="},{"version":3,"sources":["UpdateProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA","file":"UpdateProfile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>User profit</h1>\n        firstname:\n        <input type = \"text\" v-model=\"firstname\"><br>\n        <br>\n        lastname:\n        <input type = \"text\" v-model=\"lastname\"><br>\n        <br>\n        Email: \n        <input type = \"text\" v-model=\"username\"><br>\n      \n        <button type=\"button\" @click=\"updateInfo\">Update</button>\n        \n\n  </div>\n</template>\n\n<script>\n  import userDataService from \"../services/userDataService\"\n  \nexport default {\n  data() {\n    return {\n                firstname: \"\",\n                lastname: \"\",\n                username: \"\",\n                password:\"\",\n                userid:\"\"\n\n    }\n  },\n  mounted(){\n     this.userProfit();\n\n  },\n    methods: {\n    userProfit(){\n      this.firstname = this.$cookies.get('firstname');\n      this.lastname = this.$cookies.get('lastname');\n      this.username = this.$cookies.get('username');\n      this.userid = this.$cookies.get('userid');\n      this.profilePage = true;\n    },\n\n     updateInfo(){\n      \n      this.$prompt(\n                'Please enter your passowrd first:', \n                'Password',\n                {\n                    confirmButtonText: 'confirm',\n                    cancelButtonText: 'cancel',\n                    inputErrorMessage: 'InPut could not be empty',\n                    inputValidator: (value) => {       \n                        if(!value) {\n                            return 'Input could not be empty';\n                        }\n                        \n                    },\n                    }).then(async({value}) => {\n                    \n                      this.password = value;\n                      this.password = this.$md5(this.password)\n                      var result = await userDataService.getLoginDetail(this.username, this.password)\n                        let res = result.data\n                        console.log(res);\n                      \n                 if(res.checked){\n                           var  updatedResult = await userDataService.getUpdatedProfit(this.firstname, this.lastname, this.username,this.userid)\n                          let response = updatedResult.data.result;\n                          \n                          this.$cookies.set(\"firstname\", this.firstname, \"30min\");\n                          this.$cookies.set(\"lastname\",this.lastname,\"30min\");\n                          this.$cookies.set(\"username\",this.username,\"30min\");\n                          this.$cookies.set(\"state\", true,\"30min\");\n                          this.$cookies.set(\"userid\", this.userid, \"30min\");\n                          if(response.list.nModified ==1){\n                                alert(\"successfully updated \")\n                          }\n\n                        }else{\n\n                            alert(\"password incorrect, please try again\")\n                            return;\n\n                        }\n\n                      \n                    })\n\n                  }\n   \n  }\n\n}\n</script>\n\n"]}]}