{"remainingRequest":"/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/src/views/Mainpage.vue?vue&type=template&id=00015bfc&","dependencies":[{"path":"/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/src/views/Mainpage.vue","mtime":1621918042515},{"path":"/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/node_modules/cache-loader/dist/cjs.js","mtime":1620844328000},{"path":"/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1620844328000},{"path":"/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/node_modules/cache-loader/dist/cjs.js","mtime":1620844328000},{"path":"/Users/mark/Desktop/Master/web-development/assignment2/Ecommerce/client/node_modules/vue-loader/lib/index.js","mtime":1620844328000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}