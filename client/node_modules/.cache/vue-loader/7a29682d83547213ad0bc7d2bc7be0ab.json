{"remainingRequest":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drx/Documents/GitHub/WebDev_G8/client/src/views/Mainpage.vue?vue&type=template&id=00015bfc&","dependencies":[{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/src/views/Mainpage.vue","mtime":1620978856736},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}