{"remainingRequest":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drx/Documents/GitHub/WebDev_G8/client/src/views/cart.vue?vue&type=style&index=0&id=c7dd8b8c&scoped=true&lang=css&","dependencies":[{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/src/views/cart.vue","mtime":1621907965625},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgI3BhZ2Utd3JhcCB7CiAgICBtYXJnaW46IGF1dG87CiAgICBtYXgtd2lkdGg6IDEwMjBweDsKICAgIG1pbi1oZWlnaHQ6IDEwMHZoOwogICAgCiAgfQoKICAudG90YWwtcHJpY2UgewogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICBmb250LXNpemU6IDI1cHg7CiAgICBtYXJnaW4tbGVmdDogNzUlOwogIH0KCiAgICAuY2hlY2tvdXQtYnV0dG9uIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjA1ZDIzOwogICAgICAgIHdpZHRoOiAzNSU7CiAgICAgICAgbWFyZ2luLXRvcDogNjVweDsKICAgICAgICBtYXJnaW4tbGVmdDogMzAlOwogIH0KCiAgaDEgewogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrOwogICAgbWFyZ2luOiAwOwogICAgbWFyZ2luLXRvcDogMTZweDsKICAgIHBhZGRpbmc6IDE2cHg7CiAgfQoKCiAgLnByb2R1Y3QtY29udGFpbmVyIHsKICAgIGFsaWduLWNvbnRlbnQ6ICdjZW50ZXInOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgcGFkZGluZzogMTZweDsKICAgIHdpZHRoOiAxMDAlOwogIH0KCiAgICAucHJvZHVjdC1pbWFnZSB7CiAgICBmbGV4OiAxOwogICAgaGVpZ2h0OiAxMDBweDsKICAgIG1hcmdpbjogYXV0bzsKICAgIG1heC13aWR0aDogMTAwcHg7CiAgfQoKICAgIC5kZXRhaWxzLXdyYXAgewogICAgcGFkZGluZzogMCAxNnB4OwogICAgZmxleDogMzsKICB9CgoKICAgIC5yZW1vdmUtZnJvbS1jYXJ0IHsKICAgIGZsZXg6IDE7CiAgICBtYXJnaW46IGF1dG87CiAgICBtYXgtd2lkdGg6IDE4MHB4OwogIH0KCiAgLmVkaXQtcXVhbnRpdHkgewogICAgICBmbGV4OiAxOwogICAgICBtYXJnaW46IGF1dG87CiAgfQoKICAuZWRpdC1idG4gewogICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgZm9udC1zaXplOiAxNXB4OwogICAgcGFkZGluZzogNnB4OwogIH0KCiAgLmVkaXQtdGV4dCB7CiAgICBtYXgtd2lkdGg6IDE4cHg7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBtYXJnaW4tbGVmdDogMXB4OwogICAgbWFyZ2luLXJpZ2h0OiAxcHg7CiAgfQoKICAgLmlucHV0LXN1YiwuaW5wdXQtYWRkewogICAgbWluLXdpZHRoOiA0MHB4OwogICAgaGVpZ2h0OiAxMDAlOwogICAgYm9yZGVyOiAwOwogICAgY29sb3I6ICM2MDVGNUY7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBmb250LXNpemU6IDE2cHg7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgYmFja2dyb3VuZDogI2YwZjBmMDsKICB9Cgouc2VsZWN0LWlwdCB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBwYWRkaW5nOjAgM3B4OwogICAgd2lkdGg6IDMwcHg7CiAgICBtaW4td2lkdGg6IDMwcHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cgp9CgoKCg=="},{"version":3,"sources":["cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"cart.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\n\n    <div v-if=\"cartItems.length > 0 && loginState\">\n        <BackButton></BackButton>\n        <div id=\"page-wrap\">\n            <h1>Shopping Cart</h1>\n            <div v-for=\"(item,index) in cartItems\" :key=\"index\">\n                <div class=\"product-container\">\n                    <img class=\"product-image\" v-lazy=\"'/static/'+item.image\" alt=\"\">\n                    <div class=\"details-wrap\">\n                        <h3>{{ item.title }}</h3>\n                        <p>${{ item.price }}</p>\n                    </div>\n                    <div class=\"edit-quantity\">\n                        <button class=\"edit-btn\" @click=\"editCart('minus',item)\">-</button>\n                        <input class=\"edit-text\" type=\"text\" v-model=\"item.addQuantity\">\n                        <button class=\"edit-btn\" @click=\"editCart('add',item)\">+</button>\n                    </div>\n                    <button class=\"remove-from-cart\" @click=\"removeItem(item.title)\">Remove From Cart</button>\n                </div>\n            </div>\n            <div class=\"price-text\">\n                <span class=\"total-price\">Total Price: ${{computedPrice | currency('$') }}</span>\n            </div>\n            <div class=\"proceed-transaction\">\n                <button class=\"checkout-button\" @click=\"clearStock()\">Confirm The Transaction</button>\n            </div>\n        </div>\n    </div>\n\n    \n    <div v-else-if=\"cartItems.length == 0\">\n    <BackButton></BackButton>\n        <div id=\"page-wrap\">\n            <h1>Shopping Cart</h1>\n            <p>You haven't added anything to your cart yet!</p>\n        </div>\n    </div>\n\n    <div v-else-if=\"!loginState\">\n\n        <BackButton></BackButton>\n        <div id=\"page-wrap\">\n            <h1>Shopping Cart</h1>\n            <p>You are not logged in! Please log in your account!</p>\n        </div>\n    </div>\n\n</template>\n\n\n<script>\nimport BackButton from \"./../components/BackButton.vue\";\nimport userDataService from \"../services/userDataService\";\nimport ProductDataService from \"../services/ProductDataService\"; // product URL request\n\n\n\nexport default {\n    inject: ['reload'],\n    name: \"cart\",\n    components: {\n        BackButton\n    },\n    data() {\n        return {\n            email: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            cartItems: [],\n            loginState: false,\n        }\n    },\n    computed: {\n        computedPrice () {\n            let money = 0;\n            this.cartItems.forEach( (item) => {\n                money += parseFloat(item.price)*parseInt(item.addQuantity);\n            })\n            return money;\n        }\n\n    },\n    methods: {\n\n        getUserDetail() {\n            let base64 = require(\"js-base64\").Base64;\n            this.firstname = this.$cookies.get(\"firstname\");\n            this.lastname = this.$cookies.get(\"lastname\");\n            this.email = this.$cookies.get(\"username\");\n            this.firstname = base64.decode(this.firstname);\n            this.lastname = base64.decode(this.lastname);\n            this.email = base64.decode(this.email);\n            this.loginState = this.$cookies.get(\"state\");\n\n            // console.log(this.firstname);\n            // console.log(this.email);\n        },\n        async getCartItems() {\n            //get the user from the backend\n            let data = await userDataService.getCartList(this.firstname, this.lastname);\n            this.cartItems = data.data.cartlist;\n        },\n\n        async removeItem(productTitle) {\n\n            console.log(productTitle);\n            let res = await userDataService.deleteItem(this.firstname, this.lastname, productTitle);\n            if (res.status ==\"0\") {\n                console.log(\"delete succ\");\n                this.getCartItems();\n            }\n            //this.$router.go(0);\n            this.reload();\n          \n        },\n\n        async editCart (flag, item) {\n\n            let editNumber = item.addQuantity;\n            let productTitle = item.title;\n            if (flag == 'minus' && item.addQuantity >= 2) {\n                editNumber--;\n                //this.reload();\n                let res = await userDataService.updateItemNumber(this.firstname, this.lastname, item.title, editNumber);\n                if(res.status == \"0\") {\n                    console.log(\"update succ\");\n                    this.getCartItems();\n                }\n            } else if (flag == 'add' && item.stock > item.addQuantity) {\n                editNumber++;\n                //this.reload();\n                let res = await userDataService.updateItemNumber(this.firstname, this.lastname, item.title, editNumber);\n                if(res.status == \"0\") {\n                    console.log(\"update succ\");\n                    this.getCartItems();\n                }\n            } else if (flag == 'minus' && item.addQuantity == 1) {\n                let res = await userDataService.deleteItem(this.firstname, this.lastname, productTitle);\n                if (res.status ==\"0\") {\n                    console.log(\"delete succ\");\n                    this.getCartItems();\n                }\n                //this.$router.go(0);\n                //this.reload();\n                \n            }\n\n            this.reload();\n\n        },\n        changeState() {\n            if(this.changeState == true) {\n                this.changeState = false;\n            } else {\n                this.changeState = true;\n            }\n        },\n        async clearStock() {\n            let confirmation = confirm(\"Are you sure to confirm the transaction?\");\n            if (confirmation) {\n                //clear the user cartlist and product number in the user data and product stock data\n                for (let i = 0; i < this.cartItems.length; i++) {\n                    let productTitle = this.cartItems[i].title;\n                    let num = this.cartItems[i].addQuantity;\n                    let stock = this.cartItems[i].stock;\n                    console.log(productTitle);\n                    if (num > stock) {\n                        //ensure every item's stock is enoght to checkout\n                        alert(\"please minus the quantity of\"+productTitle);\n                        return;\n                    } else {\n                        let after = stock - num;\n                        let res = await ProductDataService.deleteProductNumber(productTitle, after);\n                    }\n                    let res = await userDataService.deleteItem(this.firstname, this.lastname, productTitle);\n\n                }\n                this.reload();\n                this.$router.go(-1);\n\n            }\n\n        }\n\n\n    },\n    mounted() {\n        this.getUserDetail();\n        this.getCartItems();\n    }\n\n}\n</script>\n\n\n<style scoped>\n\n  #page-wrap {\n    margin: auto;\n    max-width: 1020px;\n    min-height: 100vh;\n    \n  }\n\n  .total-price {\n    font-weight: bold;\n    font-size: 25px;\n    margin-left: 75%;\n  }\n\n    .checkout-button {\n        background-color: #f05d23;\n        width: 35%;\n        margin-top: 65px;\n        margin-left: 30%;\n  }\n\n  h1 {\n    border-bottom: 1px solid black;\n    margin: 0;\n    margin-top: 16px;\n    padding: 16px;\n  }\n\n\n  .product-container {\n    align-content: 'center';\n    border-bottom: 1px solid #ddd;\n    display: flex;\n    padding: 16px;\n    width: 100%;\n  }\n\n    .product-image {\n    flex: 1;\n    height: 100px;\n    margin: auto;\n    max-width: 100px;\n  }\n\n    .details-wrap {\n    padding: 0 16px;\n    flex: 3;\n  }\n\n\n    .remove-from-cart {\n    flex: 1;\n    margin: auto;\n    max-width: 180px;\n  }\n\n  .edit-quantity {\n      flex: 1;\n      margin: auto;\n  }\n\n  .edit-btn {\n    border-radius: 5px;\n    font-size: 15px;\n    padding: 6px;\n  }\n\n  .edit-text {\n    max-width: 18px;\n    font-size: 14px;\n    margin-left: 1px;\n    margin-right: 1px;\n  }\n\n   .input-sub,.input-add{\n    min-width: 40px;\n    height: 100%;\n    border: 0;\n    color: #605F5F;\n    text-align: center;\n    font-size: 16px;\n    overflow: hidden;\n    display: inline-block;\n    background: #f0f0f0;\n  }\n\n.select-ipt {\n    display: inline-block;\n    padding:0 3px;\n    width: 30px;\n    min-width: 30px;\n    text-align: center;\n\n}\n\n\n\n</style>\n"]}]}