{"remainingRequest":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drx/Documents/GitHub/WebDev_G8/client/src/components/UpdateProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/src/components/UpdateProfile.vue","mtime":1621322743888},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drx/Documents/GitHub/WebDev_G8/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHVzZXJEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy91c2VyRGF0YVNlcnZpY2UiCiAgCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIGZpcnN0bmFtZTogIiIsCiAgICAgICAgICAgICAgICBsYXN0bmFtZTogIiIsCiAgICAgICAgICAgICAgICB1c2VybmFtZTogIiIsCiAgICAgICAgICAgICAgICBwYXNzd29yZDoiIiwKICAgICAgICAgICAgICAgIHVzZXJpZDoiIgogICAgICAgICAgICAgICAgCgogICAgfQogIH0sCiAgbW91bnRlZCgpewogICAgIHRoaXMudXNlclByb2ZpdCgpOwoKICB9LAogICAgbWV0aG9kczogewogICAgdXNlclByb2ZpdCgpewogICAgICB0aGlzLmZpcnN0bmFtZSA9IHRoaXMuJGNvb2tpZXMuZ2V0KCdmaXJzdG5hbWUnKTsKICAgICAgdGhpcy5sYXN0bmFtZSA9IHRoaXMuJGNvb2tpZXMuZ2V0KCdsYXN0bmFtZScpOwogICAgICB0aGlzLnVzZXJuYW1lID0gdGhpcy4kY29va2llcy5nZXQoJ3VzZXJuYW1lJyk7CiAgICAgIHRoaXMudXNlcmlkID0gdGhpcy4kY29va2llcy5nZXQoJ3VzZXJpZCcpOwogICAgICB0aGlzLnByb2ZpbGVQYWdlID0gdHJ1ZTsKICAgIH0sCgogICAgIHVwZGF0ZUluZm8oKXsKICAgICAgCiAgICAgIHRoaXMuJHByb21wdCgKICAgICAgICAgICAgICAgICdQbGVhc2UgZW50ZXIgeW91ciBwYXNzb3dyZCBmaXJzdDonLCAKICAgICAgICAgICAgICAgICdQYXNzd29yZCcsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdjb25maXJtJywKICAgICAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnY2FuY2VsJywKICAgICAgICAgICAgICAgICAgICBpbnB1dEVycm9yTWVzc2FnZTogJ0luUHV0IGNvdWxkIG5vdCBiZSBlbXB0eScsCiAgICAgICAgICAgICAgICAgICAgaW5wdXRWYWxpZGF0b3I6ICh2YWx1ZSkgPT4geyAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgaWYoIXZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0lucHV0IGNvdWxkIG5vdCBiZSBlbXB0eSc7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9KS50aGVuKGFzeW5jKHt2YWx1ZX0pID0+IHsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFzc3dvcmQgPSB2YWx1ZTsKICAgICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBhd2FpdCB1c2VyRGF0YVNlcnZpY2UuZ2V0TG9naW5EZXRhaWwodGhpcy51c2VybmFtZSwgdGhpcy5wYXNzd29yZCkKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlcyA9IHJlc3VsdC5kYXRhCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICBpZihyZXMuY2hlY2tlZCl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciAgdXBkYXRlZFJlc3VsdCA9IGF3YWl0IHVzZXJEYXRhU2VydmljZS5nZXRVcGRhdGVkUHJvZml0KHRoaXMuZmlyc3RuYW1lLCB0aGlzLmxhc3RuYW1lLCB0aGlzLnVzZXJuYW1lLHRoaXMudXNlcmlkKQogICAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXNwb25zZSA9IHVwZGF0ZWRSZXN1bHQuZGF0YS5yZXN1bHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kY29va2llcy5zZXQoImZpcnN0bmFtZSIsIHRoaXMuZmlyc3RuYW1lLCAiMzBtaW4iKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRjb29raWVzLnNldCgibGFzdG5hbWUiLHRoaXMubGFzdG5hbWUsIjMwbWluIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kY29va2llcy5zZXQoInVzZXJuYW1lIix0aGlzLnVzZXJuYW1lLCIzMG1pbiIpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJzdGF0ZSIsIHRydWUsIjMwbWluIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kY29va2llcy5zZXQoInVzZXJpZCIsIHRoaXMudXNlcmlkLCAiMzBtaW4iKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyZXNwb25zZS5saXN0Lm5Nb2RpZmllZCA9PTEpewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCJzdWNjZXNzZnVsbHkgdXBkYXRlZCAiKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlewoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCJwYXNzd29yZCBpbmNvcnJlY3QsIHBsZWFzZSB0cnkgYWdhaW4iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwoKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIH0pCgogICAgICAgICAgICAgICAgICB9CiAgIAogIH0KCn0K"},{"version":3,"sources":["UpdateProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA","file":"UpdateProfile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>User profit</h1>\n        firstname:\n        <input type = \"text\" v-model=\"firstname\"><br>\n        <br>\n        lastname:\n        <input type = \"text\" v-model=\"lastname\"><br>\n        <br>\n        Email: \n        <input type = \"text\" v-model=\"username\"><br>\n      \n        <button type=\"button\" @click=\"updateInfo\">Update</button>\n        \n\n  </div>\n</template>\n\n<script>\n  import userDataService from \"../services/userDataService\"\n  \nexport default {\n  data() {\n    return {\n                firstname: \"\",\n                lastname: \"\",\n                username: \"\",\n                password:\"\",\n                userid:\"\"\n                \n\n    }\n  },\n  mounted(){\n     this.userProfit();\n\n  },\n    methods: {\n    userProfit(){\n      this.firstname = this.$cookies.get('firstname');\n      this.lastname = this.$cookies.get('lastname');\n      this.username = this.$cookies.get('username');\n      this.userid = this.$cookies.get('userid');\n      this.profilePage = true;\n    },\n\n     updateInfo(){\n      \n      this.$prompt(\n                'Please enter your passowrd first:', \n                'Password',\n                {\n                    confirmButtonText: 'confirm',\n                    cancelButtonText: 'cancel',\n                    inputErrorMessage: 'InPut could not be empty',\n                    inputValidator: (value) => {       \n                        if(!value) {\n                            return 'Input could not be empty';\n                        }\n                        \n                    },\n                    }).then(async({value}) => {\n                    \n                      this.password = value;\n                      var result = await userDataService.getLoginDetail(this.username, this.password)\n                        let res = result.data\n                        console.log(res);\n                      \n                 if(res.checked){\n                           var  updatedResult = await userDataService.getUpdatedProfit(this.firstname, this.lastname, this.username,this.userid)\n                          let response = updatedResult.data.result;\n                          \n                          this.$cookies.set(\"firstname\", this.firstname, \"30min\");\n                          this.$cookies.set(\"lastname\",this.lastname,\"30min\");\n                          this.$cookies.set(\"username\",this.username,\"30min\");\n                          this.$cookies.set(\"state\", true,\"30min\");\n                          this.$cookies.set(\"userid\", this.userid, \"30min\");\n                          if(response.list.nModified ==1){\n                                alert(\"successfully updated \")\n                          }\n\n                        }else{\n\n                            alert(\"password incorrect, please try again\")\n                            return;\n\n                        }\n\n                      \n                    })\n\n                  }\n   \n  }\n\n}\n</script>\n\n"]}]}